{"version":3,"sources":["components/ingredient.jsx","models/recipe.js","data/data.js","components/RecipeItem/recipeItem.jsx","App.js","index.js"],"names":["Ingredient","props","style","borderRadius","padding","backgroundColor","margin","color","className","type","id","name","value","onChange","userSelected","Recipe","ingredients","this","score","allRecipe","forEach","recipe","push","RecipeItem","selectedIngredients","App","useState","whatcanyoumake","setwhatcanyoumake","userData","includes","n","findIndex","element","splice","display","overflow","map","index","onClick","make","console","log","ingredient","i","length","width","rootElement","document","getElementById","createRoot","render"],"mappings":"qMAGe,SAASA,EAAWC,GAMjC,OACE,qBACEC,MAAO,CACLC,aAAc,MACdC,QAAS,MACTC,gBAAiB,OACjBC,OAAQ,OACR,SAEF,sBAAKJ,MAdK,CACZC,aAAc,MACdI,MAAO,SAYcC,UAAU,iBAAgB,UAC3C,uBACEA,UAAU,mBACVC,KAAK,WACLC,GAAG,SACHC,KAAK,UACLC,MAAM,YACNC,SAAU,WACRZ,EAAMa,aAAab,EAAMU,KAC3B,IAEF,uBAAOH,UAAU,mBAAkB,SAAEP,EAAMU,WAInD,C,oBCzBeI,EARH,aACV,WAAYJ,EAAMK,GAAc,oBAC9BC,KAAKN,KAAOA,EACZM,KAAKD,YAAcA,EACnBC,KAAKC,MAAQ,CACf,ICIIF,EAAc,CAClB,QACA,OACA,QACA,SACA,SACA,UACA,QACA,QACA,UACA,WACA,UAGEG,EAAY,GArBG,CACjB,CAAC,UAAW,CAAC,OAAQ,SAAU,QAAS,UACxC,CAAC,YAAa,CAAC,OAAQ,SAAU,QAAS,QAAS,YACnD,CAAC,aAAc,CAAC,OAAQ,UACxB,CAAC,UAAW,CAAC,WAAY,aAmBhBC,SAAQ,SAACR,GAClB,IAAIS,EAAS,IAAIN,EAAOH,EAAM,GAAIA,EAAM,IACxCO,EAAUG,KAAKD,EACjB,I,MC1Be,SAASE,EAAWtB,GAC/B,OAAO,qBAAKO,UAAU,YAAW,SAC7B,6BAAKP,EAAMU,QAEnB,CCCA,IAAIa,EAAsB,GAEX,SAASC,IACtB,MAA4CC,mBAAS,IAAG,mBAAjDC,EAAc,KAAEC,EAAiB,KAExC,SAASC,EAASjB,GAChB,GAAIY,EAAoBM,SAASlB,GAAQ,CACvC,IAAMmB,EAAIP,EAAoBQ,WAAU,SAACC,GAAO,OAAKA,IAAYrB,CAAK,IACtEY,EAAoBU,OAAOH,EAAG,EAChC,MACEP,EAAoBF,KAAKV,EAE7B,CAkCA,OACE,sBAAKJ,UAAU,YAAW,UACxB,8DAEA,qBAAKN,MAAO,CAAEiC,QAAS,OAAQC,SAAU,UAAW,SACjDpB,EAAYqB,KAAI,SAACzB,EAAO0B,GACvB,OACE,cAACtC,EAAU,CAETU,GAAI4B,EACJ3B,KAAMC,EACNE,aAAce,GAHTS,EAMX,MAEF,8BACE,wBACEC,QAlDR,WACE,IAAIC,EAAO,GAEXC,QAAQC,IAAI,qBACZvB,EAAUC,SAAQ,SAACC,GACjB,IAAIH,EAAQ,EACZM,EAAoBJ,SAAQ,SAACuB,GAC3BtB,EAAOL,YAAYI,SAAQ,SAACR,GACtB+B,IAAe/B,IACjBM,IACAG,EAAOH,MAAQA,EAEnB,GACF,GACF,IAEA,IAAK,IAAI0B,EAAI,EAAGA,EAAIzB,EAAU0B,OAAQD,IACpCH,QAAQC,IAAI,wBACRvB,EAAUyB,GAAG1B,OAASC,EAAUyB,GAAG5B,YAAY6B,QACjDL,EAAKlB,KAAKH,EAAUyB,GAAGjC,MAGzB8B,QAAQC,IAAI,SAAUF,GACtBZ,EAAkBY,GAGA,IAAhBA,EAAKK,QACPjB,EAAkB,CAAC,2BAGvB,EAqBQpB,UAAU,uBACVN,MAAO,CAAE4C,MAAO,QAAS,+BAK7B,8BACGnB,EAAeU,KAAI,SAACzB,EAAO0B,GAC1B,OAAO,cAACf,EAAU,CAAaZ,KAAMC,EAAM,eAAnB0B,EAC1B,QAIR,CChFA,IAAMS,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAAC1B,EAAG,M","file":"static/js/main.9960eec6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\r\n\r\nexport default function Ingredient(props) {\r\n  const style = {\r\n    borderRadius: \"5px\",\r\n    color: \"white\"\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        borderRadius: \"5px\",\r\n        padding: \"5px\",\r\n        backgroundColor: \"grey\",\r\n        margin: \"2px\"\r\n      }}\r\n    >\r\n      <div style={style} className=\"form-check m-2\">\r\n        <input\r\n          className=\"form-check-input\"\r\n          type=\"checkbox\"\r\n          id=\"check1\"\r\n          name=\"option1\"\r\n          value=\"something\"\r\n          onChange={() => {\r\n            props.userSelected(props.name);\r\n          }}\r\n        />\r\n        <label className=\"form-check-label\">{props.name}</label>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","class Recipe {\r\n  constructor(name, ingredients) {\r\n    this.name = name;\r\n    this.ingredients = ingredients;\r\n    this.score = 0;\r\n  }\r\n}\r\n\r\nexport default Recipe;\r\n","import Recipe from \"../models/recipe\";\r\n\r\nconst recipeData = [\r\n  [\"biryani\", [\"rice\", \"tomato\", \"onion\", \"water\"]],\r\n  [\"friedrice\", [\"rice\", \"tomato\", \"onion\", \"water\", \"raddish\"]],\r\n  [\"apple rice\", [\"rice\", \"apple\"]],\r\n  ['noodles', ['capsicum', 'chicken']]\r\n];\r\n\r\nconst ingredients = [\r\n  \"water\",\r\n  \"rice\",\r\n  \"onion\",\r\n  \"tomato\",\r\n  \"carrot\",\r\n  \"raddish\",\r\n  \"apple\",\r\n  \"mango\",\r\n  \"chicken\",\r\n  \"capsicum\",\r\n  \"banana\"\r\n];\r\n\r\nlet allRecipe = [];\r\n\r\nrecipeData.forEach((value) => {\r\n  let recipe = new Recipe(value[0], value[1]);\r\n  allRecipe.push(recipe);\r\n});\r\n\r\nexport { allRecipe, ingredients };\r\n","import \"./recipeItem.css\"\r\n\r\nexport default function RecipeItem(props){\r\n    return <div className=\"main-card\">\r\n        <h1>{props.name}</h1>\r\n    </div>\r\n}","import { useState } from \"react\";\nimport \"./styles.css\";\nimport \"./components/taskItem\";\nimport Ingredient from \"./components/ingredient\";\nimport { allRecipe, ingredients } from \"./data/data\";\nimport RecipeItem from \"./components/RecipeItem/recipeItem\";\n\nlet selectedIngredients = [];\n\nexport default function App() {\n  const [whatcanyoumake, setwhatcanyoumake] = useState([]);\n\n  function userData(value) {\n    if (selectedIngredients.includes(value)) {\n      const n = selectedIngredients.findIndex((element) => element === value);\n      selectedIngredients.splice(n, 1);\n    } else {\n      selectedIngredients.push(value);\n    }\n  }\n\n  function recipeAlgorithm() {\n    let make = [];\n\n    console.log(\"ayy yoo you there\");\n    allRecipe.forEach((recipe) => {\n      let score = 0;\n      selectedIngredients.forEach((ingredient) => {\n        recipe.ingredients.forEach((value) => {\n          if (ingredient === value) {\n            score++;\n            recipe.score = score;\n          }\n        });\n      });\n    });\n\n    for (let i = 0; i < allRecipe.length; i++) {\n      console.log(\"is this even working\");\n      if (allRecipe[i].score >= allRecipe[i].ingredients.length) {\n        make.push(allRecipe[i].name);\n      }\n\n      console.log(\"make: \", make);\n      setwhatcanyoumake(make);\n    }\n\n    if (make.length === 0) {\n      setwhatcanyoumake([\"select more ingredients\"]);\n    }\n\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>What do you wanna make today</h1>\n\n      <div style={{ display: \"flex\", overflow: \"scroll\" }}>\n        {ingredients.map((value, index) => {\n          return (\n            <Ingredient\n              key={index}\n              id={index}\n              name={value}\n              userSelected={userData}\n            />\n          );\n        })}\n      </div>\n      <div>\n        <button\n          onClick={recipeAlgorithm}\n          className=\"btn btn-primary my-2\"\n          style={{ width: \"100%\" }}\n        >\n          what can i make\n        </button>\n      </div>\n      <div>\n        {whatcanyoumake.map((value, index) => {\n          return <RecipeItem key={index} name={value}>  </RecipeItem>;\n        })}\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}